Version 1.0.5. - 2010-11-03
1. This version of eXSLTForms works with the version of XSLTForms as of 2010-05-14.
2. For installing it, please see the installation.txt file.
3. This version contains the "xslt" extension action refactored as "transform" extension action,
acording to these discussions on W3C Forms Mailing List http://comments.gmane.org/gmane.comp.web.xforms/5240.


Version 1.0.4. - 2010-08-21
1. This version of eXSLTForms works with the version of XSLTForms as of 2010-05-14.
2. Take note that the installation algorithm for eXSLTForms has changed; see file installation.txt.
3. This is a maintenance revision, containing optimised code.


Version 1.0.3. - 2010-07-14
1. This version of eXSLTForms works with the version of XSLTForms as of 2010-05-14.
2. For installing it, please see the installation.txt file.
3. This version works with FF, Opera, Google Chrome,and Internet Explorer.
4. This version provides also the integration of Xinha rich text web editor (Xinha works only with FF and IE for now).


Version 1.0.2. - 2010-06-07
1. This version of eXSLTForms works with the latest XSLTForms version, as of 2010-05-14.
2. For installing it, please see the installation.txt file.
3. This version works with FF, Opera, Google Chrome,and Internet Explorer. The former version worked only with FF.


Version 1.0.1. - 2010-05-17
1. This version of eXSLTForms works with the latest XSLTForms version, as of 2010-05-14.
2. For installing it, please see the installation.txt file.
3. This version provides a simpler way of embedding DataInstancesViewer on page - see the installation.txt file.
4. This version provides the integration of the web rich text editors CKEditor, TinyMCE, Dojo Editor, YUI Editor, and YUI SimpleEditor, 
as well as of the code editor EditArea. For installing them, please read installation.txt. For using them, please read the documentation.txt
 file (pay attention that the RTEs options should now be wrapped into curly brackets and have single quotes within, not double quotes).
5. On http://extxsltforms.sourceforge.net or http://kuberam.ro one can find examples of usage for each editor and even an page with ALL
the editors happily co-operating - just for fun. 


Version beta 7 - 2010-03-26
1. This version of eXSLTForms works with the latest XSLTForms version.
2. For installing it, please see the installation.txt file.
3. This version provides the integration of the web rich text editors CKEditor and TinyMCE, as well as of the code editor EditArea.
For using them, please see the documentation.txt file. For CKEditor and TinyMCE we have now their content refreshed when the bounded
node is changed.



Version beta 6 - 2010-03-22
1. This version of eXSLTForms works with the latest XSLTForms version.
2. For installing it, please see the installation.txt file.
3. This version provides the integration of the web rich text editors CKEditor and TinyMCE, as well as of the code editor EditArea.
For using them, please see the documentation.txt file.



Version beta 5 - 2010-03-08
1. This version provides a new feature, namely the integration of CKEditor (a well-known rich text editor for web) into XSLTForms.
The xfCKEditor folder should be saved in /ckeditor/plugins folder.
Also, the page XForms designated to host a CKEditor should include a script element having @src pointing to ckeditor.js file.
Last, but not the least, in order to be valid XML, this extension should have its own namespace, but this imply certain modifications
of XSLTForms. I release this version as is, for users to enjoy,  and, with kind help of Alain Couthures, I hope that next version will 
have its own namespace.
For details see readme.txt or http://kuberam.ro.


Version beta 4 - 2010-02-26
1. For installation of this version, see the file installation.txt in this archive.
2. This version provides a better rendering of data instances by the extension "Data Instances Viewer".
3. As XSLTForms has now a fix for insert with @position="after", our xslt action works now as intended, namely it replaces the target nodeset.
4. This version has a new action, called replace action. For details see readme.txt or http://kuberam.ro.


Version beta 3 - 2010-01-20
1. This version contains a data instances viewer, which is used to inspect the data instances during runtime, at any moment, after any 
xforms action. The user can expand and collapse the viewer, and also to refresh the data (by pressing the button "Refresh data") after executing a 
certain xforms action.
2. This version of xslt action allows user to supply no parameters at all (thus, @parameters is optional).
3. The extensions element in config.xsl file should be as follows:
        <extensions> <!-- HTML elements to be added just after xsltforms.js and xsltforms.css loading -->
		<!--this variable sets the relative URI to the eXSLTForms' folder-->
            <xsl:variable name="extensionsURI">/rest//db/webApps/util/exsltforms</xsl:variable>
		<!--set this variable to "yes" in case you need to inspect the data instances, and "no" otherwise-->
            <xsl:variable name="dataInstancesViewer">yes</xsl:variable>
            <script src="{$extensionsURI}/exsltforms.js" type="text/javascript">
                <xsl:text/>
            </script>
            <script type="text/javascript">
			var xf_model_extensions = new XFModel("xf-model-extensions",null);
			var xf_instance_extensions = new XFInstance("xf-instance-extensions", xf_model_extensions, null, "&lt;extensionRoot/&gt;");
			XPath.create("instance('xf-instance-extensions')",new FunctionCallExpr('http://www.w3.org/2002/xforms instance',new CteExpr('xf-instance-extensions')));
		</script>
            <xsl:choose>
                <xsl:when test="$dataInstancesViewer = 'yes'">
                    <script type="text/javascript">
                        <xsl:text>var indentingXSLTuri = '</xsl:text>
                        <xsl:value-of select="$extensionsURI"/>
                        <xsl:text>/indentingXSLT.xsl';</xsl:text>
                    </script>
                    <script src="{$extensionsURI}/dataInstancesViewer.js" type="text/javascript">
                        <xsl:text/>
                    </script>
			<link type="text/css" href="{$extensionsURI}/dataInstancesViewer.css" rel="stylesheet"/>
                </xsl:when>
                <xsl:otherwise/>
            </xsl:choose>
        </extensions>
4. The extensions element in config.xsl file contains two variables, namely: $extensionsURI, which sets the relative URI to the eXSLTForms' folder, and
$dataInstancesViewer, which show/hide the data instances viewer. 
5. At this very moment, the data instances viewer works only with a little hack, namely by adding the following content
                        <div id="dataInstancesViewerContainer">
                            <div id="showViewerButtonDiv">
                                <button id="showViewerButton" type="button" onclick="dataViewer_getModelsIDs()">Expand Data Instances Viewer</button>
                            </div>
                            <div id="dataInstancesViewerDiv"/>
                        </div>
after the genuine content of div having @id = 'xformControl'.

Enjoy!


Version beta 2 - 2010-01-13
1. For this version to work, user should add the following JS script as child of extensions element in config.xsl file located within the
xsltforms' folder (the existing extension JS script should remain):
            <script type="text/javascript">
			var xf_model_extension = new XFModel("xf_model_extension",null);
			var tmpExtensionInstance = new XFInstance("xf-instance-extension", xf_model_extension, null, "&lt;extensionRoot/&gt;");
			XPath.create("instance('xf-instance-extension')",new FunctionCallExpr('http://www.w3.org/2002/xforms instance',new CteExpr('xf-instance-extension')));
		</script>
2. This version works also for Internet Explorer and replaces the target nodeset (version beta 1 replaced the whole target instance).

Note: It seems that the transformed nodeset is added as last child of the parent of target nodeset, not after the target nodeset, 
so it is not quite a "replacement". This has to be fixed.

